---
header: |
  # frozen_string_literal: false

  require 'simplecov'

  SimpleCov.command_name 'Brutal test suite'
  SimpleCov.start

  require 'spectus'

  include Spectus

front_object: |
  'foo'

subject: |
  begin
    it { %{front_object}.%{challenge} }.%{level} %{matcher}
  rescue ::Spectus::Result::Fail => e
    e
  end

variables:
  challenge:
    - "upcase"
    - "itself"
    - "gsub!('f', 'b')"
    - "boom"
    - "empty?(4)"
  level:
    - MUST
    - SHOULD
    - MAY
    - MUST_NOT
    - SHOULD_NOT
    - "MUST!"
    - "SHOULD!"
    - "MAY!"
    - "MUST_NOT!"
    - "SHOULD_NOT!"
  matcher:
    - "raise_exception(NoMethodError)"
    - "raise_exception(ArgumentError)"
    - "eql('foo')"
    - "equal(42)"

actual_values:
  - "%{subject}.level"
  - "%{subject}.to_sym"
  - "%{subject}.error?"
  - "%{subject}.failure?"
  - "%{subject}.info?"
  - "%{subject}.negate?"
  - "%{subject}.failed?"
  - "%{subject}.passed?"
  - "%{subject}.success?"
  - "%{subject}.valid?"
  - "%{subject}.warning?"
  - "%{subject}.emoji"
  - "%{subject}.char"
  - "%{subject}.colored_char"
  - "%{subject}.message"
  - "%{subject}.to_s"
  - "%{subject}.colored_string"
  - "%{subject}.inspect"
  - "%{subject}.actual.class"
  - "%{subject}.error.class"
  - "%{subject}.got.class"
